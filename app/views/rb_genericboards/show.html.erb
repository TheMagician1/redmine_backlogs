<!-- Generic board view -->
<%# early javascript before common.hs %>
<%- controller.rb_jquery_plugins = capture do %>
  <%= javascript_include_tag(
    'jquery/jquery.qtip.pack.js',
    'jquery/jquery.qtip.setup.js',
    'jquery/jquery.multiselect.js',
    :plugin => 'redmine_backlogs') %>
<%- end %>
<%- content_for :head_tags do %>
  <script type="text/javascript"
          src="<%= url_for(:controller => 'rb_server_variables',
                           :action => 'project',
                           :project_id => @project.identifier,
                           :genericboard_id => @rb_genericboard.id,
                           :context => 'genericboard',
                           :format => 'js') %>">
  </script>
  <script type="text/javascript">
    RB.constants.genericboard_active_filters={};
    <% @rb_genericboard.prefilter_alternative_options(@project, @filteroptions).each do |key, filteroptions| %>
    RB.constants.genericboard_active_filters['<%= filteroptions[:key]%>'] = '<%= filteroptions[:selected]%>';
    <% end %>
    <% @rb_genericboard.rowfilter_alternative_options(@project, @filteroptions).each do |key, filteroptions| %>
    RB.constants.genericboard_active_filters['<%= filteroptions[:key]%>'] = '<%= filteroptions[:selected]%>';
    <% end %>
  </script>

  <%= javascript_include_tag(
    'genericboard',
    'model',
    'editable_inplace',
    'sprint',
    'release',
    'issue',
    #'story',
    'generic',
    :plugin => 'redmine_backlogs') %>
  <%= stylesheet_link_tag 'jquery/jquery.qtip.css', :plugin => 'redmine_backlogs' %>
  <%= stylesheet_link_tag 'jquery/jquery.multiselect.css', :plugin => 'redmine_backlogs' %>
  <%= stylesheet_link_tag 'taskboard.css', :plugin => 'redmine_backlogs', :media => 'print,screen' %>
  <%= stylesheet_link_tag 'genericboard.css', :plugin => 'redmine_backlogs', :media => 'print,screen' %>
  <% if Backlogs.setting[:board_colors_by_type] %>
    <style type="text/css">
      <% Tracker.order(:id).each do |tracker|
        color = Backlogs.setting["tracker_color_#{tracker.id}"].strip()
        if color && !color.empty?
          #color = Backlogs::Color.new(color).darken(0.1)
          color_from = Backlogs::Color.new(color).lighten(0.8)
          %>
          #taskboard .issue.tracker_color_<%= tracker.id %> {
            background-color: <%= color %>;
background: -webkit-gradient(linear, left top, left bottom, from(<%= color_from %>), to(<%= color %>));
background: -moz-linear-gradient(top, <%= color_from %>, <%= color %>);
filter:progid:DXImageTransform.Microsoft.Gradient(Enabled=1,GradientType=0,StartColorStr=<%= color_from %>,EndColorStr=<%= color %>);
          }
        <% end %>
      <% end %>
    </style>
  <% end %>
<%- end %>

<%- content_for :breadcrumbs do %>
  <%= link_to l(:label_master_backlog), :controller => "rb_master_backlogs", :action => "show", :project_id => @project %>
  <%= breadcrumb_split %>
  <%= link_to l(:label_epics), :controller => :rb_epicboards, :action => :show, :project_id => @project %>
  <%= breadcrumb_split %>
  <%= l(:label_rb_genericboard_plural) %>:&nbsp;<%= @rb_genericboard.name %> <% unless @rb_genericboard.prefilter_name.blank? %>(<%= @rb_genericboard.prefilter_name %>)<% end %>
<%- end %>

<%- content_for :view_specific_users do %>
  <span>
    <label for="select_board"><%= l(:label_rb_select_board) %></label>
    <select name="select_board" id="select_board">
      <%= genericboards_boardlist_options_for_select(@rb_genericboard.id) %>
    </select>
  </span>

  <span class="prefilter-overrides">
    <form action='' method='GET' name="prefilter-overrides" id="prefilter-overrides">
      <% @rb_genericboard.prefilter_alternative_options(@project, @filteroptions).each do |key, filteroptions| %>
      <%= filteroptions[:label] %>
      <select name="<%=filteroptions[:key]%>" id="filter<%=filteroptions[:key]%>" _selected="<%=filteroptions[:selected]%>">
        <%= options_for_select((filteroptions[:values] || []), filteroptions[:selected]) %>
      </select>
      <% end %>

      <% @rb_genericboard.rowfilter_alternative_options(@project, @filteroptions).each do |key, filteroptions| %>
      <%= filteroptions[:label] %>
      <select name="<%=filteroptions[:key]%>" id="filter<%=filteroptions[:key]%>" _selected="<%=filteroptions[:selected]%>">
        <%= options_for_select((filteroptions[:values] || []), filteroptions[:selected]) %>
      </select>
      <% end %>
    </form>
  </span>
<%- end %>

<%- content_for :view_specific_links do %>
  <div id="detail_slider" title="Detail level"></div>
  <span id="col_width" title="Set to 0 for auto width"><%= l(:label_column_width) %>: <input name="col_width"/></span>
<% if false %>
  <a id="disable_autorefresh">Disable Auto-refresh</a>
  <a id="refresh">Refresh</a>
<% end #if false %>
<%- end %>

<%- content_for :main do %>
  <div id="taskboard" _row_type_name="<%= @rb_genericboard.row_type_name %>" _element_type_name="<%= @rb_genericboard.element_type_name %>"
      _row_type="<%= @rb_genericboard.row_type %>" _element_type="<%= @rb_genericboard.element_type %>"
      _col_type="<%= @rb_genericboard.col_type %>">
    <table id="board_header" cellspacing="0">
      <tr>
        <td><%= @rb_genericboard.row_type_name %></td>
        <% @columns.each do |column| %>
        <td class="swimlane" _col_id="<%= column.id %>"><%= column.name %></td>
        <% end %>
      </tr>
    </table>

    <table id="generics" class="board" cellspacing="0">
      <tbody class="row-list">
      <% @rows.each do |row| %>
      <% if !@rb_genericboard.hide_empty_rows? || @rb_genericboard.row_used?(row.id) %>
        <tr id="swimlane-<%= row.id %>" class="story-swimlane ui-sortable">
          <td id="<%= row.id %>_rowelement">
            <div class="generic_addbtn"></div>
            <%= render :partial => "generic", :object => row, :locals => { :cls => 'rowelement' } %>
          </td>
          <% @columns.each do |col| %>
          <td class="swimlane list" id="<%= row.id %>_<%= col.id %>" _col_id="<%= col.id %>">
            <div class="generic_addbtn"></div>
            <% if (@elements_by_cell.include? row.id) && (@elements_by_cell[row.id].include? col.id) %>
              <%= render :partial => "generic", :collection => @elements_by_cell[row.id][col.id], :locals => { :cls => 'task' } cached: true %>
            <% end %>
          </td>
          <% end %>
        </tr>
      <% end %>
      <% end %>
      </tbody>
    </table>
  </div>

<%- end %>

<%- content_for :helpers do %>
  <div id="add_button_template">
    <div class="addbutton">
      <%= image_tag("add.png", :alt => "+") %>
    </div>
  </div>

  <div id="task_template">
    <%= render :partial => "generic", :object => RbGeneric.new, :locals => { :cls => 'task' } %>
  </div>
  <table id="row_template">
        <tr id="swimlane-new" class="story-swimlane ui-sortable">
          <td id="new_rowelement">
            <%= render :partial => "generic", :object => RbGeneric.new, :locals => { :cls => 'rowelement' } %>
          </td>
          <% @rb_genericboard.columns(@project).each do |col| %>
          <td class="swimlane list" id="new_<%= col.id %>" _col_id="<%= col.id %>">
          </td>
          <% end %>
        </tr>
  </table>

  <select class="assigned_to_id template" id="assigned_to_id_options">
    <option value="" color="#AAAAAA" color_light="#E0E0E0"> </option>
    <%= users_assignable_options_for_select(@project.assignable_users) %>
  </select>

  <div>
    <%= render :partial => "rb_stories/helpers" %>
  </div>
<%- end %>
